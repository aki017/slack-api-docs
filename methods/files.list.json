{
  "desc": "This method returns a list of files within the team. It can be filtered and sliced in various ways.",
  "args": {
    "token": {
      "required": true,
      "example": "xxxx-xxxxxxxxx-xxxx",
      "desc": "Authentication token (Requires scope: files:read)"
    },
    "user": {
      "required": false,
      "example": "U1234567890",
      "desc": "Filter files created by a single user."
    },
    "channel": {
      "required": false,
      "example": "C1234567890",
      "desc": "Filter files appearing in a specific channel, indicated by its ID."
    },
    "ts_from": {
      "required": false,
      "example": "123456789",
      "desc": "Filter files created after this timestamp (inclusive)."
    },
    "ts_to": {
      "required": false,
      "example": "123456789",
      "desc": "Filter files created before this timestamp (inclusive)."
    },
    "types": {
      "required": false,
      "example": "images",
      "desc": "Filter files by type:\n\n\nall - All files\nposts - Posts\nsnippets - Snippets\nimages - Image files\ngdocs - Google docs\nzips - Zip files\npdfs - PDF files\n\n\nYou can pass multiple values in the types argument, like types=posts,snippets.The default value is all, which does not filter the list."
    },
    "count": {
      "required": false,
      "example": "20",
      "desc": "Number of items to return per page."
    },
    "page": {
      "required": false,
      "example": "2",
      "desc": "Page number of results to return."
    }
  },
  "errors": {
    "user_not_found": "Value passed for `user` was invalid",
    "unknown_type": "Value passed for `types` was invalid",
    "invalid_array_arg": "The method was passed a PHP-style array argument (e.g. with a name like `foo[7]`). These are never valid with the Slack API.",
    "invalid_charset": "The method was called via a `POST` request, but the `charset` specified in the `Content-Type` header was invalid. Valid charset names are: `utf-8` `iso-8859-1`.",
    "invalid_form_data": "The method was called via a `POST` request with `Content-Type` `application/x-www-form-urlencoded` or `multipart/form-data`, but the form data was either missing or syntactically invalid.",
    "invalid_post_type": "The method was called via a `POST` request, but the specified `Content-Type` was invalid. Valid types are: `application/json` `application/x-www-form-urlencoded` `multipart/form-data` `text/plain`.",
    "missing_post_type": "The method was called via a `POST` request and included a data payload, but the request did not include a `Content-Type` header.",
    "request_timeout": "The method was called via a `POST` request, but the `POST` data was either missing or truncated."
  }
}